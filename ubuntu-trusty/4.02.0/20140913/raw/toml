++ opam install toml -e ubuntu
+ depext=
Ubuntu depexts:
+ echo Ubuntu depexts:
+ '[' '' '!=' '' ']'
++ opam install toml -e source,linux
+ srcext=
Ubuntu srcexts:
+ echo Ubuntu srcexts:
+ '[' '' '!=' '' ']'
+ opam install toml
The following actions will be performed:
 - install   menhir.20130912                       [required by toml]
 - install   toml.1.0.0
=== 2 to install ===

=-=- Synchronizing package archives -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
[default] Synchronizing with /home/opam/opam-repository/archives/menhir.20130912+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/toml.1.0.0+opam.tar.gz
sending incremental file list
sending incremental file list
toml.1.0.0+opam.tar.gz
menhir.20130912+opam.tar.gz

sent 10,804 bytes  received 35 bytes  21,678.00 bytes/sec
total size is 10,673  speedup is 0.98

sent 547,373 bytes  received 35 bytes  1,094,816.00 bytes/sec
total size is 547,113  speedup is 1.00

=-=- Installing packages =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Building menhir.20130912:
  make install PREFIX=/home/opam/.opam/4.02.0 docdir=/home/opam/.opam/4.02.0/doc/menhir libdir=/home/opam/.opam/4.02.0/lib/menhir mandir=/home/opam/.opam/4.02.0/man/man1
rm -f src/installation.ml
echo "let libdir = \"/home/opam/.opam/4.02.0/lib/menhir\"" > src/installation.ml
if ocamlfind ocamlc -v >/dev/null 2>&1 ; then \
	  echo "let ocamlfind = true" >> src/installation.ml ; \
	else \
	  echo "let ocamlfind = false" >> src/installation.ml ; \
	fi
make -C src library bootstrap
make[1]: Entering directory `/home/opam/.opam/4.02.0/build/menhir.20130912/src'
ocamlbuild -classic-display -use-ocamlfind -j 0 menhirLib.cmo menhirLib.cmx
ocamlfind ocamlopt unix.cmxa -I /home/opam/.opam/4.02.0/lib/ocaml/ocamlbuild /home/opam/.opam/4.02.0/lib/ocaml/ocamlbuild/ocamlbuildlib.cmxa -linkpkg myocamlbuild.ml /home/opam/.opam/4.02.0/lib/ocaml/ocamlbuild/ocamlbuild.cmx -o myocamlbuild
File "_tags", line 10, characters 27-40:
Warning: the tag "use_ocamlyacc" is not used in any flag declaration, so it will have no effect; it may be a typo. Otherwise use `mark_tag_used` in your myocamlbuild.ml to disable this warning.
ocamlfind ocamldep -modules infiniteArray.mli > infiniteArray.mli.depends
ocamlfind ocamlc -c -o infiniteArray.cmi infiniteArray.mli
ocamlfind ocamldep -modules infiniteArray.ml > infiniteArray.ml.depends
ocamlfind ocamldep -modules packedIntArray.mli > packedIntArray.mli.depends
ocamlfind ocamlc -c -o packedIntArray.cmi packedIntArray.mli
ocamlfind ocamldep -modules packedIntArray.ml > packedIntArray.ml.depends

++ opam install argot -e ubuntu
+ depext=
+ echo Ubuntu depexts:
+ '[' '' '!=' '' ']'
Ubuntu depexts:
++ opam install argot -e source,linux
+ srcext=
+ echo Ubuntu srcexts:
+ '[' '' '!=' '' ']'
+ opam install argot
Ubuntu srcexts:
The following actions will be performed:
 - install   argot.1.1
=== 1 to install ===

=-=-=-=-=-=-=-=-=-=-=-=- Synchronizing package archives -=-=-=-=-=-=-=-=-=-=-=-=
[default] Synchronizing with /home/opam/opam-repository/archives/argot.1.1+opam.tar.gz
sending incremental file list
argot.1.1+opam.tar.gz

sent 356,977 bytes  received 35 bytes  714,024.00 bytes/sec
total size is 356,771  speedup is 1.00

=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Installing packages -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Building argot.1.1:
  sh configure
  make all
  make install
Makefile.config successfully created
echo 'argot.cmo' > argot.itarget
(test -x /home/opam/.opam/4.02.0+trunk/bin/ocamlopt && test TRUE = TRUE && echo 'argot.cmxs' >> argot.itarget) || true
(test -x /home/opam/.opam/4.02.0+trunk/bin/ocamljava && echo 'argot.cmjs' >> argot.itarget) || true
/home/opam/.opam/4.02.0+trunk/bin/ocamlbuild -classic-display -no-links argot.otarget
/home/opam/.opam/4.02.0+trunk/bin/ocamlopt.opt unix.cmxa -I /home/opam/.opam/4.02.0+trunk/lib/ocaml/ocamlbuild /home/opam/.opam/4.02.0+trunk/lib/ocaml/ocamlbuild/ocamlbuildlib.cmxa myocamlbuild.ml /home/opam/.opam/4.02.0+trunk/lib/ocaml/ocamlbuild/ocamlbuild.cmx -o myocamlbuild
File "_tags", line 29, characters 15-29:
Warning: the tag "src_version_ml" is not used in any flag declaration, so it will have no effect; it may be a typo. Otherwise use `mark_tag_used` in your myocamlbuild.ml to disable this warning.
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/icons.mli > src/icons.mli.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/icons.cmi src/icons.mli
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/icons.ml > src/icons.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamlyacc src/definitionParser.mly
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/definitionParser.mli > src/definitionParser.mli.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/definitionParser.cmi src/definitionParser.mli
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/definitionParser.ml > src/definitionParser.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamllex.opt -q src/definitionLexer.mll
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/definitionLexer.ml > src/definitionLexer.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/main.mli > src/main.mli.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/main.cmi src/main.mli
cp /tmp/versione9f420.ml src/version.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/main.ml > src/main.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/args.mli > src/args.mli.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/definitions.mli > src/definitions.mli.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/definitions.cmi src/definitions.mli
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/base64.mli > src/base64.mli.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/licenses.mli > src/licenses.mli.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/search.mli > src/search.mli.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/search_js.mli > src/search_js.mli.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/tables.mli > src/tables.mli.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/args.cmi src/args.mli
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/base64.cmi src/base64.mli
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/licenses.cmi src/licenses.mli
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/search.cmi src/search.mli
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/search_js.cmi src/search_js.mli
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/tables.cmi src/tables.mli
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/search_js.ml > src/search_js.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/utils.mli > src/utils.mli.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/utils.cmi src/utils.mli
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/licenses.ml > src/licenses.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/version.mli > src/version.mli.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/version.cmi src/version.mli
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/version.ml > src/version.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/definitions.ml > src/definitions.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/definitionLexer.cmo src/definitionLexer.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/base64.ml > src/base64.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/args.ml > src/args.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/tables.ml > src/tables.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/utils.ml > src/utils.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamldep.opt -modules src/search.ml > src/search.ml.depends
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/icons.cmo src/icons.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/definitionParser.cmo src/definitionParser.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/main.cmo src/main.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/search_js.cmo src/search_js.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/licenses.cmo src/licenses.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/version.cmo src/version.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/definitions.cmo src/definitions.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/base64.cmo src/base64.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/args.cmo src/args.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/tables.cmo src/tables.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/utils.cmo src/utils.ml
/home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/search.cmo src/search.ml
+ /home/opam/.opam/4.02.0+trunk/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/search.cmo src/search.ml
File "src/search.ml", line 153, characters 75-77:
Error: This expression has type
         Odoc_info.Type.type_manifest = Odoc_type.type_manifest
       but an expression was expected of type Types.type_expr
Command exited with code 2.
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
Hint: Recursive traversal of subdirectories was not enabled for this build,
  as the working directory does not look like an ocamlbuild project (no
  '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
  you should add the option "-r" or create an empty '_tags' file.
  
  To enable recursive traversal for some subdirectories only, you can use the
  following '_tags' file:
  
      true: -traverse
      <dir1> or <dir2>: traverse
      
make: *** [all] Error 10
[ERROR] The compilation of argot.1.1 failed.
Removing argot.1.1.
  ocamlfind remove argot
ocamlfind: [WARNING] No such directory: /home/opam/.opam/4.02.0+trunk/lib/argot


#====================== ERROR while installing argot.1.1 ======================#
# opam-version         1.2.0~beta4 (1b6ec60c9af058c94174b505f21c08d0c97a6c29)
# os                   linux
# command              make all
# path                 /home/opam/.opam/4.02.0+trunk/build/argot.1.1
# compiler             4.02.0+trunk
# exit-code            2
# env-file             /home/opam/.opam/4.02.0+trunk/build/argot.1.1/argot-126-6d07ae.env
# stdout-file          /home/opam/.opam/4.02.0+trunk/build/argot.1.1/argot-126-6d07ae.out
# stderr-file          /home/opam/.opam/4.02.0+trunk/build/argot.1.1/argot-126-6d07ae.err
### stdout ###
# ...[truncated]
#   as the working directory does not look like an ocamlbuild project (no
#   '_tags' or 'myocamlbuild.ml' file). If you have modules in subdirectories,
#   you should add the option "-r" or create an empty '_tags' file.
#   
#   To enable recursive traversal for some subdirectories only, you can use the
#   following '_tags' file:
#   
#       true: -traverse
#       <dir1> or <dir2>: traverse
#       
### stderr ###
# make: *** [all] Error 10

'opam install argot' failed.

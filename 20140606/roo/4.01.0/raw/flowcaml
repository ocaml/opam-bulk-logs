++ opam install flowcaml -e ubuntu
+ depext=
+ echo Ubuntu depexts:
Ubuntu depexts:
+ '[' '' '!=' '' ']'
++ opam install flowcaml -e source,linux
+ srcext=
Ubuntu srcexts:
+ echo Ubuntu srcexts:
+ '[' '' '!=' '' ']'
+ opam install flowcaml
The following actions will be performed:
 - install flowcaml.1.07
1 to install | 0 to reinstall | 0 to upgrade | 0 to downgrade | 0 to remove

=-=-= Installing flowcaml.1.07 =-=-=
default    Synchronizing with /home/opam/opam-repository/archives/flowcaml.1.07+opam.tar.gz
sending incremental file list
flowcaml.1.07+opam.tar.gz

sent 373,280 bytes  received 35 bytes  746,630.00 bytes/sec
total size is 373,062  speedup is 1.00
Building flowcaml.1.07:
  sh -c cd src-flowcaml && ./configure --prefix /home/opam/.opam/system --with-runlib=/home/opam/.opam/system/lib/flowcaml
  sh -c cd src-flowcaml && make world
  sh -c cd src-flowcaml && make install
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
Suffix of executable files: ""
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ANSI C... none needed
checking how to run the C preprocessor... gcc -E

*** Objective Caml
checking for ocamlc... /usr/bin/ocamlc
checking ocamlc version... 4.01.0
checking Objective Caml library path... /usr/lib/ocaml
checking for ocamlopt... /usr/bin/ocamlopt
checking ocamlopt version... 4.01.0
checking for ocamlyacc... /usr/bin/ocamlyacc
checking for ocamllex... /usr/bin/ocamllex
checking for ocamldep... /usr/bin/ocamldep
Enabling run-time assertion checks
link bytecode executables in default mode
checking for /usr/lib/ocaml/graphics.cma... yes

*** Auxiliary programs
checking for dot... no

*** Installation directories
checking binaries installation path:... /home/opam/.opam/system/bin
checking standard library installation path:... /home/opam/.opam/system/lib/flowcaml
checking runtime library installation path:... /home/opam/.opam/system/lib/flowcaml

configure: creating ./config.status
config.status: creating ../Makefile.common
config.status: creating Makefile.config
config.status: creating utils/config.ml

------------------------------------------------------------
Everything seems to be ok.
You can now start compilation by 'make world'.
------------------------------------------------------------
make all
make[1]: Entering directory `/home/opam/.opam/system/build/flowcaml.1.07/src-flowcaml'
cpp -DGRAPHICS -P ../src-averell/avl_graphics.mlp > ../src-averell/avl_graphics.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_graphics.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_topo.mli
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_topo.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_tarjan.mli
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_tarjan.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_closure.mli
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_closure.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_kernel.mli
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_kernel.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_graphviz.mli
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_graphviz.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_draw.mli
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-averell/avl_draw.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton_lib.mli
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton_lib.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton_tree.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton_list.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton_debug.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton_aux.mli
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton_aux.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton_sig.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton_templates.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton_dumb.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton_light.ml
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c utils/standard.mli
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton.mli
/usr/bin/ocamlc -I ../src-averell -I ../src-dalton -I utils -I parsing -I stripping -I types -I typing -I driver -I toplevel -I tools -I docgen -w -A -c ../src-dalton/dalton.ml

++ opam install llvm -e ubuntu
+ depext=
+ echo Ubuntu depexts:
+ '[' '' '!=' '' ']'
Ubuntu depexts:
++ opam install llvm -e source,linux
+ srcext=https://gist.github.com/jpdeplaix/11352552/raw
+ echo Ubuntu srcexts: https://gist.github.com/jpdeplaix/11352552/raw
+ '[' https://gist.github.com/jpdeplaix/11352552/raw '!=' '' ']'
Ubuntu srcexts: https://gist.github.com/jpdeplaix/11352552/raw
++ mktemp
+ t=/tmp/tmp.lLz7gh7zWL
+ curl -sL https://gist.github.com/jpdeplaix/11352552/raw
+ bash -ex /tmp/tmp.lLz7gh7zWL
+ sudo add-apt-repository 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.4 main'
+ wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key
/tmp/tmp.lLz7gh7zWL: line 4: wget: command not found
+ sudo apt-key add -
gpg: no valid OpenPGP data found.
+ opam install llvm
The following actions will be performed:
 - install llvm.3.4
1 to install | 0 to reinstall | 0 to upgrade | 0 to downgrade | 0 to remove

=-=-= Installing llvm.3.4 =-=-=
default    Synchronizing with /home/opam/opam-repository/archives/llvm.3.4+opam.tar.gz
sending incremental file list
llvm.3.4+opam.tar.gz

sent 15,945,084 bytes  received 35 bytes  10,630,079.33 bytes/sec
total size is 15,941,070  speedup is 1.00
Applying makefile-doc.patch.
patching file bindings/ocaml/Makefile
Applying makefile+system.patch.
patching file bindings/ocaml/Makefile.ocaml
Building llvm.3.4:
  ./configure CC=gcc CXX=g++ --prefix=/home/opam/.opam/system --disable-doxygen --disable-docs --enable-static --enable-shared --with-ocaml-libdir=/home/opam/.opam/system/lib/llvm
  make -C bindings/ocaml
  make -C bindings/ocaml install
  cp /home/opam/.opam/system/lib/llvm/META.llvm /home/opam/.opam/system/lib/llvm/META
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking how to run the C preprocessor... gcc -E
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking target system type... x86_64-unknown-linux-gnu
checking type of operating system we're going to host on... Linux
checking type of operating system we're going to target... Linux
checking target architecture... x86_64
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... 
++ opam install argot -e ubuntu
+ depext=
+ echo Ubuntu depexts:
+ '[' '' '!=' '' ']'
Ubuntu depexts:
++ opam install argot -e source,linux
+ srcext=
+ echo Ubuntu srcexts:
+ '[' '' '!=' '' ']'
+ opam install argot
Ubuntu srcexts:
The following actions will be performed:
 - install argot.1.1
1 to install | 0 to reinstall | 0 to upgrade | 0 to downgrade | 0 to remove

=-=-= Installing argot.1.1 =-=-=
default    Synchronizing with /home/opam/opam-repository/archives/argot.1.1+opam.tar.gz
sending incremental file list
argot.1.1+opam.tar.gz

sent 356,977 bytes  received 35 bytes  714,024.00 bytes/sec
total size is 356,771  speedup is 1.00
Building argot.1.1:
  sh configure
  make all
  make install
Makefile.config successfully created
echo 'argot.cmo' > argot.itarget
(test -x /usr/bin/ocamlopt && test TRUE = TRUE && echo 'argot.cmxs' >> argot.itarget) || true
(test -x /usr/bin/ocamljava && echo 'argot.cmjs' >> argot.itarget) || true
/usr/bin/ocamlbuild -classic-display -no-links argot.otarget
/usr/bin/ocamlopt.opt unix.cmxa -I /usr/lib/ocaml/ocamlbuild /usr/lib/ocaml/ocamlbuild/ocamlbuildlib.cmxa myocamlbuild.ml /usr/lib/ocaml/ocamlbuild/ocamlbuild.cmx -o myocamlbuild
/usr/bin/ocamldep.opt -modules src/icons.mli > src/icons.mli.depends
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/icons.cmi src/icons.mli
/usr/bin/ocamldep.opt -modules src/icons.ml > src/icons.ml.depends
/usr/bin/ocamlyacc src/definitionParser.mly
/usr/bin/ocamldep.opt -modules src/definitionParser.mli > src/definitionParser.mli.depends
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/definitionParser.cmi src/definitionParser.mli
/usr/bin/ocamldep.opt -modules src/definitionParser.ml > src/definitionParser.ml.depends
/usr/bin/ocamllex.opt -q src/definitionLexer.mll
/usr/bin/ocamldep.opt -modules src/definitionLexer.ml > src/definitionLexer.ml.depends
/usr/bin/ocamldep.opt -modules src/main.mli > src/main.mli.depends
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/main.cmi src/main.mli
cp /tmp/version731c72.ml src/version.ml
/usr/bin/ocamldep.opt -modules src/main.ml > src/main.ml.depends
/usr/bin/ocamldep.opt -modules src/args.mli > src/args.mli.depends
/usr/bin/ocamldep.opt -modules src/definitions.mli > src/definitions.mli.depends
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/definitions.cmi src/definitions.mli
/usr/bin/ocamldep.opt -modules src/base64.mli > src/base64.mli.depends
/usr/bin/ocamldep.opt -modules src/licenses.mli > src/licenses.mli.depends
/usr/bin/ocamldep.opt -modules src/search.mli > src/search.mli.depends
/usr/bin/ocamldep.opt -modules src/search_js.mli > src/search_js.mli.depends
/usr/bin/ocamldep.opt -modules src/tables.mli > src/tables.mli.depends
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/args.cmi src/args.mli
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/base64.cmi src/base64.mli
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/licenses.cmi src/licenses.mli
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/search.cmi src/search.mli
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/search_js.cmi src/search_js.mli
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/tables.cmi src/tables.mli
/usr/bin/ocamldep.opt -modules src/search_js.ml > src/search_js.ml.depends
/usr/bin/ocamldep.opt -modules src/utils.mli > src/utils.mli.depends
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/utils.cmi src/utils.mli
/usr/bin/ocamldep.opt -modules src/licenses.ml > src/licenses.ml.depends
/usr/bin/ocamldep.opt -modules src/version.mli > src/version.mli.depends
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/version.cmi src/version.mli
/usr/bin/ocamldep.opt -modules src/version.ml > src/version.ml.depends
/usr/bin/ocamldep.opt -modules src/definitions.ml > src/definitions.ml.depends
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/definitionLexer.cmo src/definitionLexer.ml
/usr/bin/ocamldep.opt -modules src/base64.ml > src/base64.ml.depends
/usr/bin/ocamldep.opt -modules src/args.ml > src/args.ml.depends
/usr/bin/ocamldep.opt -modules src/tables.ml > src/tables.ml.depends
/usr/bin/ocamldep.opt -modules src/utils.ml > src/utils.ml.depends
/usr/bin/ocamldep.opt -modules src/search.ml > src/search.ml.depends
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/icons.cmo src/icons.ml
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/definitionParser.cmo src/definitionParser.ml
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/main.cmo src/main.ml
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/search_js.cmo src/search_js.ml
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/licenses.cmo src/licenses.ml
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/version.cmo src/version.ml
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/definitions.cmo src/definitions.ml
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/base64.cmo src/base64.ml
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/args.cmo src/args.ml
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/tables.cmo src/tables.ml
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/utils.cmo src/utils.ml
/usr/bin/ocamlc.opt -c -I +ocamldoc -w Ae -warn-error A -I src -o src/search.cmo src/search.ml
/usr/bin/ocamlc.opt -pack src/icons.cmo src/definitionParser.cmo src/definitionLexer.cmo src/utils.cmo src/definitions.cmo src/version.cmo src/args.cmo src/base64.cmo src/licenses.cmo src/search.cmo src/search_js.cmo src/tables.cmo src/main.cmo -o argot.cmo
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/definitionParser.cmx src/definitionParser.ml
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/definitionLexer.cmx src/definitionLexer.ml
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/utils.cmx src/utils.ml
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/definitions.cmx src/definitions.ml
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/version.cmx src/version.ml
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/icons.cmx src/icons.ml
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/args.cmx src/args.ml
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/base64.cmx src/base64.ml
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/licenses.cmx src/licenses.ml
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/search.cmx src/search.ml
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/search_js.cmx src/search_js.ml
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/tables.cmx src/tables.ml
/usr/bin/ocamlopt.opt -c -I +ocamldoc -w Ae -warn-error A -for-pack Argot -I src -o src/main.cmx src/main.ml
touch argot.mli  ; if  /usr/bin/ocamlopt.opt -pack -I src src/icons.cmx src/definitionParser.cmx src/definitionLexer.cmx src/utils.cmx src/definitions.cmx src/version.cmx src/args.cmx src/base64.cmx src/licenses.cmx src/search.cmx src/search_js.cmx src/tables.cmx src/main.cmx -o argot.cmx  ; then  rm -f argot.mli  ; else  rm -f argot.mli  ; exit 1; fi
/usr/bin/ocamlopt.opt -shared argot.cmx -o argot.cmxs
echo 'argot.cmo' > argot.itarget
(test -x /usr/bin/ocamlopt && test TRUE = TRUE && echo 'argot.cmxs' >> argot.itarget) || true
(test -x /usr/bin/ocamljava && echo 'argot.cmjs' >> argot.itarget) || true
/usr/bin/ocamlbuild -classic-display -no-links argot.otarget
cp /tmp/versionc859bb.ml src/version.ml
if [ -x "/home/opam/.opam/system/bin/ocamlfind" ]; then \
	  /home/opam/.opam/system/bin/ocamlfind query argot && /home/opam/.opam/system/bin/ocamlfind remove argot || true; \
	  /home/opam/.opam/system/bin/ocamlfind install argot META `pwd`/_build/*.cmo `pwd`/_build/*.cm?s; \
	else \
	  mkdir -p `/usr/bin/ocamldoc -customdir`; \
	  for ext in cmo cmxs cmjs; do \
	    test -f `pwd`/_build/argot.$ext && cp `pwd`/_build/argot.$ext `/usr/bin/ocamldoc -customdir` || true; \
	  done \
	fi
ocamlfind: Package `argot' not found
Installed /home/opam/.opam/system/lib/argot/argot.cmxs
Installed /home/opam/.opam/system/lib/argot/argot.cmo
Installed /home/opam/.opam/system/lib/argot/META
Installing argot.1.1.

++ opam install sonet -e ubuntu
+ depext=
+ echo Ubuntu depexts:
+ '[' '' '!=' '' ']'
Ubuntu depexts:
++ opam install sonet -e source,linux
+ srcext=
+ echo Ubuntu srcexts:
+ '[' '' '!=' '' ']'
+ opam install sonet
Ubuntu srcexts:
The following actions will be performed:
 - install sonet.0.1.2
1 to install | 0 to reinstall | 0 to upgrade | 0 to downgrade | 0 to remove

=-=-= Installing sonet.0.1.2 =-=-=
default    Synchronizing with /home/opam/opam-repository/archives/sonet.0.1.2+opam.tar.gz
sending incremental file list
sonet.0.1.2+opam.tar.gz

sent 111,923 bytes  received 35 bytes  223,916.00 bytes/sec
total size is 111,771  speedup is 1.00
Building sonet.0.1.2:
  make
  make install
ocamlbuild all.otarget
/usr/bin/ocamlopt.opt unix.cmxa -I /usr/lib/ocaml/ocamlbuild /usr/lib/ocaml/ocamlbuild/ocamlbuildlib.cmxa myocamlbuild.ml /usr/lib/ocaml/ocamlbuild/ocamlbuild.cmx -o myocamlbuild
/usr/bin/ocamlc.opt -c eventloop/epoll_stubs.c
mv epoll_stubs.o eventloop/epoll_stubs.o
/usr/bin/ocamlmklib -o eventloop/eventloop eventloop/epoll_stubs.o
/usr/bin/ocamldep.opt -modules eventloop/async_conn.mli > eventloop/async_conn.mli.depends
/usr/bin/ocamldep.opt -modules eventloop/eventloop.mli > eventloop/eventloop.mli.depends
/usr/bin/ocamlc.opt -c -annot -I eventloop -o eventloop/eventloop.cmi eventloop/eventloop.mli
/usr/bin/ocamlc.opt -c -annot -I eventloop -o eventloop/async_conn.cmi eventloop/async_conn.mli
/usr/bin/ocamldep.opt -modules eventloop/async_conn.ml > eventloop/async_conn.ml.depends
/usr/bin/ocamldep.opt -modules eventloop/conn_map.ml > eventloop/conn_map.ml.depends
/usr/bin/ocamlc.opt -c -annot -I eventloop -o eventloop/conn_map.cmo eventloop/conn_map.ml
/usr/bin/ocamldep.opt -modules eventloop/epoll_poller.mli > eventloop/epoll_poller.mli.depends
/usr/bin/ocamldep.opt -modules eventloop/net_events.mli > eventloop/net_events.mli.depends
/usr/bin/ocamlc.opt -c -annot -I eventloop -o eventloop/net_events.cmi eventloop/net_events.mli
/usr/bin/ocamlc.opt -c -annot -I eventloop -o eventloop/epoll_poller.cmi eventloop/epoll_poller.mli
/usr/bin/ocamldep.opt -modules eventloop/epoll_poller.ml > eventloop/epoll_poller.ml.depends
/usr/bin/ocamldep.opt -modules eventloop/eventloop.ml > eventloop/eventloop.ml.depends
/usr/bin/ocamldep.opt -modules eventloop/unix_poller.mli > eventloop/unix_poller.mli.depends
/usr/bin/ocamlc.opt -c -annot -I eventloop -o eventloop/unix_poller.cmi eventloop/unix_poller.mli
/usr/bin/ocamldep.opt -modules eventloop/net_events.ml > eventloop/net_events.ml.depends
/usr/bin/ocamldep.opt -modules eventloop/unix_poller.ml > eventloop/unix_poller.ml.depends
/usr/bin/ocamlc.opt -c -annot -I eventloop -o eventloop/async_conn.cmo eventloop/async_conn.ml
/usr/bin/ocamlc.opt -c -annot -I eventloop -o eventloop/epoll_poller.cmo eventloop/epoll_poller.ml
/usr/bin/ocamlc.opt -c -annot -I eventloop -o eventloop/eventloop.cmo eventloop/eventloop.ml
/usr/bin/ocamlc.opt -c -annot -I eventloop -o eventloop/net_events.cmo eventloop/net_events.ml
/usr/bin/ocamlc.opt -c -annot -I eventloop -o eventloop/unix_poller.cmo eventloop/unix_poller.ml
/usr/bin/ocamlopt.opt -c -annot -I eventloop -o eventloop/net_events.cmx eventloop/net_events.ml
/usr/bin/ocamlopt.opt -c -annot -I eventloop -o eventloop/epoll_poller.cmx eventloop/epoll_poller.ml
/usr/bin/ocamlopt.opt -c -annot -I eventloop -o eventloop/unix_poller.cmx eventloop/unix_poller.ml
/usr/bin/ocamlopt.opt -c -annot -I eventloop -o eventloop/eventloop.cmx eventloop/eventloop.ml
/usr/bin/ocamlopt.opt -c -annot -I eventloop -o eventloop/conn_map.cmx eventloop/conn_map.ml

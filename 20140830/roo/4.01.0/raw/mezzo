++ opam install mezzo -e ubuntu
+ depext=
+ echo Ubuntu depexts:
+ '[' '' '!=' '' ']'
Ubuntu depexts:
++ opam install mezzo -e source,linux
+ srcext=
+ echo Ubuntu srcexts:
+ '[' '' '!=' '' ']'
+ opam install mezzo
Ubuntu srcexts:
The following actions will be performed:
 - install   cppo.0.9.4                            [required by yojson]
 - install   camlp4.4.01.0                         [required by ulex]
 - install   easy-format.1.0.2                     [required by yojson]
 - install   pprint.20140424                       [required by mezzo]
 - install   menhir.20130912                       [required by mezzo]
 - install   functory.0.5                          [required by mezzo]
 - install   fix.20130611                          [required by mezzo]
 - install   ulex.1.1                              [required by mezzo]
 - install   biniou.1.0.9                          [required by yojson]
 - install   yojson.1.1.8                          [required by mezzo]
 - install   mezzo.0.0.m8
=== 11 to install ===

=-=- Synchronizing package archives -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
[default] Synchronizing with /home/opam/opam-repository/archives/biniou.1.0.9+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/cppo.0.9.4+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/easy-format.1.0.2+opam.tar.gz
sending incremental file list
biniou.1.0.9+opam.tar.gz
sending incremental file list
cppo.0.9.4+opam.tar.gz
sending incremental file list
easy-format.1.0.2+opam.tar.gz

sent 24,343 bytes  received 35 bytes  48,756.00 bytes/sec
total size is 24,210  speedup is 0.99

sent 21,321 bytes  received 35 bytes  42,712.00 bytes/sec
total size is 21,190  speedup is 0.99

sent 13,718 bytes  received 35 bytes  27,506.00 bytes/sec
total size is 13,580  speedup is 0.99
[default] Synchronizing with /home/opam/opam-repository/archives/fix.20130611+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/functory.0.5+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/menhir.20130912+opam.tar.gz
sending incremental file list
fix.20130611+opam.tar.gz
sending incremental file list
functory.0.5+opam.tar.gz
sending incremental file list
menhir.20130912+opam.tar.gz

sent 14,912 bytes  received 35 bytes  29,894.00 bytes/sec
total size is 14,779  speedup is 0.99

sent 78,413 bytes  received 35 bytes  156,896.00 bytes/sec
total size is 78,268  speedup is 1.00

sent 547,371 bytes  received 35 bytes  1,094,812.00 bytes/sec
total size is 547,111  speedup is 1.00
[default] Synchronizing with /home/opam/opam-repository/archives/mezzo.0.0.m8+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/pprint.20140424+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/ulex.1.1+opam.tar.gz
sending incremental file list
mezzo.0.0.m8+opam.tar.gz
sending incremental file list
pprint.20140424+opam.tar.gz
sending incremental file list
ulex.1.1+opam.tar.gz

sent 1,004,284 bytes  received 35 bytes  2,008,638.00 bytes/sec
total size is 1,003,915  speedup is 1.00

sent 23,315 bytes  received 35 bytes  46,700.00 bytes/sec
total size is 23,179  speedup is 0.99

sent 20,477 bytes  received 35 bytes  41,024.00 bytes/sec
total size is 20,348  speedup is 0.99
[default] Synchronizing with /home/opam/opam-repository/archives/yojson.1.1.8+opam.tar.gz
sending incremental file list
yojson.1.1.8+opam.tar.gz

sent 24,882 bytes  received 35 bytes  49,834.00 bytes/sec
total size is 24,749  speedup is 0.99

=-=- Installing packages =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Installing camlp4.4.01.0.
Building cppo.0.9.4:
  make
  make install-lib
echo 'let cppo_version = "0.9.4"' > cppo_version.ml
ocamlyacc cppo_parser.mly
ocamllex cppo_lexer.mll
354 states, 13186 transitions, table size 54868 bytes
3462 additional bytes used for bindings
ocamlopt -o cppo -dtypes unix.cmxa cppo_version.ml cppo_types.ml cppo_parser.mli cppo_parser.ml cppo_lexer.ml cppo_command.ml cppo_eval.ml cppo_main.ml
cd ocamlbuild_plugin && ocamlbuild -use-ocamlfind ocamlbuild_cppo.cma ocamlbuild_cppo.cmxa ocamlbuild_cppo.a ocamlbuild_cppo.cmxs
ocamlfind ocamldep -package ocamlbuild -modules ocamlbuild_cppo.mli > ocamlbuild_cppo.mli.depends
ocamlfind ocamlc -c -package ocamlbuild -o ocamlbuild_cppo.cmi ocamlbuild_cppo.mli
ocamlfind ocamldep -package ocamlbuild -modules ocamlbuild_cppo.ml > ocamlbuild_cppo.ml.depends
ocamlfind ocamlc -c -package ocamlbuild -o ocamlbuild_cppo.cmo ocamlbuild_cppo.ml
ocamlfind ocamlc -a -package ocamlbuild ocamlbuild_cppo.cmo -o ocamlbuild_cppo.cma
ocamlfind ocamlopt -c -package ocamlbuild -o ocamlbuild_cppo.cmx ocamlbuild_cppo.ml
ocamlfind ocamlopt -a -package ocamlbuild ocamlbuild_cppo.cmx -o ocamlbuild_cppo.cmxa
ocamlfind ocamlopt -shared -package ocamlbuild ocamlbuild_cppo.cmx -o ocamlbuild_cppo.cmxs
ocamlfind install -patch-version 0.9.4 "cppo_ocamlbuild" \
		META ocamlbuild_plugin/_build/ocamlbuild_cppo.cmi ocamlbuild_plugin/_build/ocamlbuild_cppo.cma ocamlbuild_plugin/_build/ocamlbuild_cppo.cmxa ocamlbuild_plugin/_build/ocamlbuild_cppo.a ocamlbuild_plugin/_build/ocamlbuild_cppo.cmxs
Installed /home/opam/.opam/4.01.0/lib/cppo_ocamlbuild/ocamlbuild_cppo.cmxs
Installed /home/opam/.opam/4.01.0/lib/cppo_ocamlbuild/ocamlbuild_cppo.a
Installed /home/opam/.opam/4.01.0/lib/cppo_ocamlbuild/ocamlbuild_cppo.cmxa
Installed /home/opam/.opam/4.01.0/lib/cppo_ocamlbuild/ocamlbuild_cppo.cma
Installed /home/opam/.opam/4.01.0/lib/cppo_ocamlbuild/ocamlbuild_cppo.cmi
Installed /home/opam/.opam/4.01.0/lib/cppo_ocamlbuild/META
Installing cppo.0.9.4.
Building easy-format.1.0.2:
  make
  make install
ocamlc -c easy_format.mli
ocamlc -c -dtypes easy_format.ml
touch bytecode
ocamlc -c easy_format.mli
ocamlopt -c -dtypes easy_format.ml
ocamlopt -I . -shared -linkall -o easy_format.cmxs easy_format.cmx
touch nativecode
echo "version = \"1.0.2\"" > META; cat META.tpl >> META
INSTALL_FILES="META easy_format.cmi easy_format.mli"; \
		if test -f bytecode; then \
		  INSTALL_FILES="$INSTALL_FILES easy_format.cmo"; \
		fi; \
		if test -f nativecode; then \
		  INSTALL_FILES="$INSTALL_FILES easy_format.cmx easy_format.o easy_format.cmxs"; \
		fi; \
		ocamlfind install easy-format $INSTALL_FILES
Installed /home/opam/.opam/4.01.0/lib/easy-format/easy_format.cmxs
Installed /home/opam/.opam/4.01.0/lib/easy-format/easy_format.o
Installed /home/opam/.opam/4.01.0/lib/easy-format/easy_format.cmx
Installed /home/opam/.opam/4.01.0/lib/easy-format/easy_format.cmo
Installed /home/opam/.opam/4.01.0/lib/easy-format/easy_format.mli
Installed /home/opam/.opam/4.01.0/lib/easy-format/easy_format.cmi
Installed /home/opam/.opam/4.01.0/lib/easy-format/META
Installing easy-format.1.0.2.
Building fix.20130611:
  make
  make install
ocamlbuild -use-ocamlfind -cflags "-g" -lflags "-g" -classic-display Fix.cma Fix.cmxa
ocamlfind ocamldep -modules Fix.mli > Fix.mli.depends
ocamlfind ocamlc -c -g -o Fix.cmi Fix.mli
ocamlfind ocamldep -modules Fix.ml > Fix.ml.depends
ocamlfind ocamlc -c -g -o Fix.cmo Fix.ml
ocamlfind ocamlc -a -g Fix.cmo -o Fix.cma
ocamlfind ocamlopt -c -g -o Fix.cmx Fix.ml
ocamlfind ocamlopt -a -g Fix.cmx -o Fix.cmxa
ocamlbuild -use-ocamlfind -cflags "-g" -lflags "-g" -classic-display Fix.cma Fix.cmxa
ocamlfind install fix META \
	  _build/Fix.cma _build/Fix.cmxa \
	  _build/Fix.a \
	  _build/Fix.cmx _build/Fix.cmi
Installed /home/opam/.opam/4.01.0/lib/fix/Fix.cmi
Installed /home/opam/.opam/4.01.0/lib/fix/Fix.cmx
Installed /home/opam/.opam/4.01.0/lib/fix/Fix.a
Installed /home/opam/.opam/4.01.0/lib/fix/Fix.cmxa
Installed /home/opam/.opam/4.01.0/lib/fix/Fix.cma
Installed /home/opam/.opam/4.01.0/lib/fix/META
Installing fix.20130611.
Building functory.0.5:
  ./configure
  make
  make ocamlfind-install
checking for ocamlc... ocamlc
ocaml version is 4.01.0
ocaml library path is /home/opam/.opam/4.01.0/lib/ocaml
checking for ocamlopt... ocamlopt
checking ocamlopt version... ok
checking for ocamlc.opt... ocamlc.opt
checking ocamlc.opt version... ok
checking for ocamlopt.opt... ocamlopt.opt
checking ocamlc.opt version... ok
checking for ocamldep... ocamldep
checking for ocamldep.opt... ocamldep.opt
checking for ocamllex... ocamllex
checking for ocamllex.opt... ocamllex.opt
checking for ocamlyacc... ocamlyacc
checking for ocamlweb... true
checking platform... configure: creating ./config.status
config.status: creating Makefile
config.status: WARNING:  'Makefile.in' seems to ignore the --datarootdir setting
echo "let version = \""0.5"\"" > version.ml
echo "let date = \""`date`"\"" >> version.ml
rm -f .depend
ocamldep.opt  *.ml *.mli > .depend
ocamlc.opt -c -dtypes -g  control.ml
ocamlc.opt -c -dtypes -g  sequential.ml
ocamlc.opt -c -dtypes -g  map_fold.ml
ocamlc.opt -c -dtypes -g  cores.ml
ocamlc.opt -c -dtypes -g  binary.mli
ocamlc.opt -c -dtypes -g  binary.ml
ocamlc.opt -c -dtypes -g  protocol.mli
ocamlc.opt -c -dtypes -g  protocol.ml
ocamlc.opt -c -dtypes -g  network.ml
ocamlc.opt -c -dtypes -g  functory.mli
ocamlc.opt -dtypes -g  -pack -o functory.cmo control.cmo sequential.cmo map_fold.cmo cores.cmo binary.cmo protocol.cmo network.cmo 
ocamlc.opt -a -dtypes -g  -o functory.cma functory.cmo
ocamlopt.opt -g -annot -c -dtypes  -for-pack Functory control.ml
ocamlopt.opt -g -annot -c -dtypes  -for-pack Functory sequential.ml
ocamlopt.opt -g -annot -c -dtypes  -for-pack Functory map_fold.ml
ocamlopt.opt -g -annot -c -dtypes  -for-pack Functory cores.ml
ocamlopt.opt -g -annot -c -dtypes  -for-pack Functory binary.ml
ocamlopt.opt -g -annot -c -dtypes  -for-pack Functory protocol.ml
ocamlopt.opt -g -annot -c -dtypes  -for-pack Functory network.ml
ocamlopt.opt -g -annot  -pack -o functory.cmx control.cmx sequential.cmx map_fold.cmx cores.cmx binary.cmx protocol.cmx network.cmx
ocamlopt.opt -g -annot -a -dtypes  -for-pack Functory -o functory.cmxa functory.cmx
ocamlfind install functory META functory.cmi functory.cma functory.cmxa functory.a
Installed /home/opam/.opam/4.01.0/lib/functory/functory.a
Installed /home/opam/.opam/4.01.0/lib/functory/functory.cmxa
Installed /home/opam/.opam/4.01.0/lib/functory/functory.cma
Installed /home/opam/.opam/4.01.0/lib/functory/functory.cmi
Installed /home/opam/.opam/4.01.0/lib/functory/META
Installing functory.0.5.
Building menhir.20130912:
  make install PREFIX=/home/opam/.opam/4.01.0 docdir=/home/opam/.opam/4.01.0/doc/menhir libdir=/home/opam/.opam/4.01.0/lib/menhir mandir=/home/opam/.opam/4.01.0/man/man1
rm -f src/installation.ml
echo "let libdir = \"/home/opam/.opam/4.01.0/lib/menhir\"" > src/installation.ml
if ocamlfind ocamlc -v >/dev/null 2>&1 ; then \
	  echo "let ocamlfind = true" >> src/installation.ml ; \
	else \
	  echo "let ocamlfind = false" >> src/installation.ml ; \
	fi
make -C src library bootstrap
make[1]: Entering directory `/home/opam/.opam/4.01.0/build/menhir.20130912/src'
ocamlbuild -classic-display -use-ocamlfind -j 0 menhirLib.cmo menhirLib.cmx
ocamlfind ocamlopt unix.cmxa -I /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild/ocamlbuildlib.cmxa -linkpkg myocamlbuild.ml /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild/ocamlbuild.cmx -o myocamlbuild
ocamlfind ocamldep -modules infiniteArray.mli > infiniteArray.mli.depends
ocamlfind ocamlc -c -o infiniteArray.cmi infiniteArray.mli
ocamlfind ocamldep -modules infiniteArray.ml > infiniteArray.ml.depends
ocamlfind ocamldep -modules packedIntArray.mli > packedIntArray.mli.depends
ocamlfind ocamlc -c -o packedIntArray.cmi packedIntArray.mli
ocamlfind ocamldep -modules packedIntArray.ml > packedIntArray.ml.depends
ocamlfind ocamldep -modules rowDisplacement.mli > rowDisplacement.mli.depends
ocamlfind ocamlc -c -o rowDisplacement.cmi rowDisplacement.mli
ocamlfind ocamldep -modules rowDisplacement.ml > rowDisplacement.ml.depends
ocamlfind ocamldep -modules engineTypes.ml > engineTypes.ml.depends
ocamlfind ocamldep -modules engine.mli > engine.mli.depends
ocamlfind ocamlc -c -g -o engineTypes.cmo engineTypes.ml
ocamlfind ocamlc -c -o engine.cmi engine.mli
ocamlfind ocamldep -modules engine.ml > engine.ml.depends
ocamlfind ocamldep -modules tableFormat.ml > tableFormat.ml.depends
ocamlfind ocamldep -modules tableInterpreter.mli > tableInterpreter.mli.depends
ocamlfind ocamlc -c -g -o tableFormat.cmo tableFormat.ml
ocamlfind ocamlc -c -o tableInterpreter.cmi tableInterpreter.mli
ocamlfind ocamldep -modules tableInterpreter.ml > tableInterpreter.ml.depends
ocamlfind ocamldep -modules convert.mli > convert.mli.depends
ocamlfind ocamlc -c -o convert.cmi convert.mli
ocamlfind ocamldep -modules convert.ml > convert.ml.depends
ocamlfind ocamlc -c -g -o infiniteArray.cmo infiniteArray.ml
ocamlfind ocamlc -c -g -o packedIntArray.cmo packedIntArray.ml
ocamlfind ocamlc -c -g -o rowDisplacement.cmo rowDisplacement.ml
ocamlfind ocamlc -c -g -o engine.cmo engine.ml
ocamlfind ocamlc -c -g -o tableInterpreter.cmo tableInterpreter.ml
ocamlfind ocamlc -c -g -o convert.cmo convert.ml
ocamlfind ocamlc -pack -g infiniteArray.cmo packedIntArray.cmo rowDisplacement.cmo engineTypes.cmo engine.cmo tableFormat.cmo tableInterpreter.cmo convert.cmo -o menhirLib.cmo
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o infiniteArray.cmx infiniteArray.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o engineTypes.cmx engineTypes.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o packedIntArray.cmx packedIntArray.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o engine.cmx engine.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o rowDisplacement.cmx rowDisplacement.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o tableFormat.cmx tableFormat.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o tableInterpreter.cmx tableInterpreter.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o convert.cmx convert.ml
touch menhirLib.mli  ; if  ocamlfind ocamlopt -pack -g infiniteArray.cmx packedIntArray.cmx rowDisplacement.cmx engineTypes.cmx engine.cmx tableFormat.cmx tableInterpreter.cmx convert.cmx -o menhirLib.cmx  ; then  rm -f menhirLib.mli  ; else  rm -f menhirLib.mli  ; exit 1; fi
# Parallel statistics: { count(total): 2(33), max: 6, min: 2, average(total): 4.000(1.182) }
Checking that Objective Caml is recent enough...
ocamlfind ocamlopt unix.cmxa -I /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild/ocamlbuildlib.cmxa -linkpkg myocamlbuild.ml /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild/ocamlbuild.cmx -o myocamlbuild
ocamlfind ocamldep -modules checkOCamlVersion.ml > checkOCamlVersion.ml.depends
ocamlfind ocamlc -c -g -o checkOCamlVersion.cmo checkOCamlVersion.ml
ocamlfind ocamlc -linkpkg str.cma -g checkOCamlVersion.cmo -o checkOCamlVersion.byte
# No parallelism done
Version 4.01.0 is OK.
ocamlfind ocamldep -modules menhir.ml > menhir.ml.depends
ocamlfind ocamldep -modules back.mli > back.mli.depends
ocamlfind ocamlc -c -o back.cmi back.mli
ocamlfind ocamlc -c -g -o menhir.cmo menhir.ml
ocamlfind ocamldep -modules back.ml > back.ml.depends
ocamlfind ocamldep -modules codeBackend.ml > codeBackend.ml.depends
ocamlfind ocamldep -modules codeBackend.mli > codeBackend.mli.depends
ocamlfind ocamldep -modules IL.mli > IL.mli.depends
ocamlfind ocamldep -modules stretch.mli > stretch.mli.depends
ocamlfind ocamldep -modules keyword.mli > keyword.mli.depends
ocamlfind ocamldep -modules positions.mli > positions.mli.depends
ocamlfind ocamlc -c -o keyword.cmi keyword.mli
ocamlfind ocamlc -c -o positions.cmi positions.mli
ocamlfind ocamlc -c -o stretch.cmi stretch.mli
ocamlfind ocamlc -c -o IL.cmi IL.mli
ocamlfind ocamlc -c -o codeBackend.cmi codeBackend.mli
ocamlfind ocamldep -modules action.ml > action.ml.depends
ocamlfind ocamldep -modules action.mli > action.mli.depends
ocamlfind ocamlc -c -o action.cmi action.mli
ocamlfind ocamldep -modules keyword.ml > keyword.ml.depends
ocamlfind ocamldep -modules positions.ml > positions.ml.depends
ocamlfind ocamldep -modules printer.ml > printer.ml.depends
ocamlfind ocamldep -modules printer.mli > printer.mli.depends
ocamlfind ocamlc -c -o printer.cmi printer.mli
/home/opam/.opam/4.01.0/bin/ocamllex.opt -q lineCount.mll
ocamlfind ocamldep -modules lineCount.ml > lineCount.ml.depends
ocamlfind ocamlc -c -g -o lineCount.cmo lineCount.ml
ocamlfind ocamldep -modules settings.ml > settings.ml.depends
ocamlfind ocamldep -modules settings.mli > settings.mli.depends
ocamlfind ocamlc -c -o settings.cmi settings.mli
ocamlfind ocamldep -modules installation.ml > installation.ml.depends
ocamlfind ocamldep -modules installation.mli > installation.mli.depends
ocamlfind ocamlc -c -o installation.cmi installation.mli
ocamlfind ocamldep -modules stringSet.ml > stringSet.ml.depends
ocamlfind ocamldep -modules stringSet.mli > stringSet.mli.depends
ocamlfind ocamlc -c -o stringSet.cmi stringSet.mli
ocamlfind ocamldep -modules version.ml > version.ml.depends
ocamlfind ocamlc -c -g -o version.cmo version.ml
ocamlfind ocamlopt -c -g -inline 1000 -o installation.cmx installation.ml
ocamlfind ocamlopt -c -g -inline 1000 -o stringSet.cmx stringSet.ml
ocamlfind ocamlopt -c -g -inline 1000 -o version.cmx version.ml
ocamlfind ocamlopt -c -g -inline 1000 -o lineCount.cmx lineCount.ml
ocamlfind ocamlopt -c -g -inline 1000 -o settings.cmx settings.ml
ocamlfind ocamlopt -c -g -inline 1000 -o keyword.cmx keyword.ml
ocamlfind ocamlopt -c -g -inline 1000 -o positions.cmx positions.ml
ocamlfind ocamlopt -c -g -inline 1000 -o printer.cmx printer.ml
ocamlfind ocamldep -modules codeBits.ml > codeBits.ml.depends
ocamlfind ocamldep -modules codeBits.mli > codeBits.mli.depends
ocamlfind ocamlc -c -o codeBits.cmi codeBits.mli
ocamlfind ocamldep -modules codePieces.ml > codePieces.ml.depends
ocamlfind ocamldep -modules codePieces.mli > codePieces.mli.depends
ocamlfind ocamldep -modules grammar.mli > grammar.mli.depends
ocamlfind ocamldep -modules gMap.ml > gMap.ml.depends
ocamlfind ocamldep -modules gSet.ml > gSet.ml.depends
ocamlfind ocamlc -c -g -o gSet.cmo gSet.ml
ocamlfind ocamldep -modules syntax.mli > syntax.mli.depends
ocamlfind ocamldep -modules mark.mli > mark.mli.depends
ocamlfind ocamlc -c -o mark.cmi mark.mli
ocamlfind ocamlc -c -g -o gMap.cmo gMap.ml
ocamlfind ocamlc -c -o syntax.cmi syntax.mli
ocamlfind ocamlc -c -o grammar.cmi grammar.mli
ocamlfind ocamlc -c -o codePieces.cmi codePieces.mli
ocamlfind ocamlopt -c -g -inline 1000 -o action.cmx action.ml
ocamlfind ocamlopt -c -g -inline 1000 -o codeBits.cmx codeBits.ml
ocamlfind ocamldep -modules grammar.ml > grammar.ml.depends
ocamlfind ocamldep -modules compressedBitSet.ml > compressedBitSet.ml.depends
ocamlfind ocamldep -modules compressedBitSet.mli > compressedBitSet.mli.depends
ocamlfind ocamlc -c -o compressedBitSet.cmi compressedBitSet.mli
ocamlfind ocamlopt -c -g -inline 1000 -o gSet.cmx gSet.ml
ocamlfind ocamldep -modules dot.ml > dot.ml.depends
ocamlfind ocamldep -modules dot.mli > dot.mli.depends
ocamlfind ocamlc -c -o dot.cmi dot.mli
ocamlfind ocamldep -modules option.ml > option.ml.depends
ocamlfind ocamldep -modules option.mli > option.mli.depends
ocamlfind ocamlc -c -o option.cmi option.mli
ocamlfind ocamlopt -c -g -inline 1000 -o option.cmx option.ml
ocamlfind ocamldep -modules error.ml > error.ml.depends
ocamlfind ocamldep -modules error.mli > error.mli.depends
ocamlfind ocamlc -c -o error.cmi error.mli
ocamlfind ocamldep -modules mark.ml > mark.ml.depends
ocamlfind ocamlopt -c -g -inline 1000 -o mark.cmx mark.ml
ocamlfind ocamldep -modules front.ml > front.ml.depends
ocamlfind ocamldep -modules front.mli > front.mli.depends
ocamlfind ocamldep -modules unparameterizedSyntax.mli > unparameterizedSyntax.mli.depends
ocamlfind ocamldep -modules stringMap.mli > stringMap.mli.depends
ocamlfind ocamlc -c -o stringMap.cmi stringMap.mli
ocamlfind ocamlc -c -o unparameterizedSyntax.cmi unparameterizedSyntax.mli
ocamlfind ocamlc -c -o front.cmi front.mli
ocamlfind ocamlopt -c -g -inline 1000 -o error.cmx error.ml
ocamlfind ocamldep -modules infer.ml > infer.ml.depends
ocamlfind ocamldep -modules infer.mli > infer.mli.depends
ocamlfind ocamlc -c -o infer.cmi infer.mli
ocamlfind ocamldep -modules IO.ml > IO.ml.depends
ocamlfind ocamldep -modules IO.mli > IO.mli.depends
ocamlfind ocamlc -c -o IO.cmi IO.mli
ocamlfind ocamldep -modules interface.ml > interface.ml.depends
ocamlfind ocamldep -modules interface.mli > interface.mli.depends
ocamlfind ocamlc -c -o interface.cmi interface.mli
ocamlfind ocamldep -modules misc.ml > misc.ml.depends
ocamlfind ocamldep -modules misc.mli > misc.mli.depends
ocamlfind ocamlc -c -o misc.cmi misc.mli
ocamlfind ocamldep -modules stringMap.ml > stringMap.ml.depends
ocamlfind ocamlopt -c -g -inline 1000 -o stringMap.cmx stringMap.ml
ocamlfind ocamldep -modules preFront.ml > preFront.ml.depends
ocamlfind ocamldep -modules preFront.mli > preFront.mli.depends
ocamlfind ocamlc -c -o preFront.cmi preFront.mli
ocamlfind ocamldep -modules concreteSyntax.mli > concreteSyntax.mli.depends
/home/opam/.opam/4.01.0/bin/ocamllex.opt -q lexer.mll
ocamlfind ocamldep -modules lexer.ml > lexer.ml.depends
cp yacc-parser.mly parser.mly
/home/opam/.opam/4.01.0/bin/ocamlyacc parser.mly
ocamlfind ocamldep -modules parser.mli > parser.mli.depends
ocamlfind ocamlc -c -o concreteSyntax.cmi concreteSyntax.mli
ocamlfind ocamlc -c -o parser.cmi parser.mli
ocamlfind ocamlc -c -g -o lexer.cmo lexer.ml
ocamlfind ocamldep -modules parser.ml > parser.ml.depends
ocamlfind ocamlopt -c -g -inline 1000 -o misc.cmx misc.ml

++ opam install tptp -e ubuntu
+ depext=libgmp-dev
+ echo Ubuntu depexts: libgmp-dev
+ '[' libgmp-dev '!=' '' ']'
+ sudo apt-get install -qq -y build-essential m4
Ubuntu depexts: libgmp-dev
+ sudo apt-get install -qq -y libgmp-dev
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
Selecting previously unselected package libgmpxx4ldbl:amd64.
(Reading database ... 20147 files and directories currently installed.)
Preparing to unpack .../libgmpxx4ldbl_2%3a5.1.3+dfsg-1ubuntu1_amd64.deb ...
Unpacking libgmpxx4ldbl:amd64 (2:5.1.3+dfsg-1ubuntu1) ...
Selecting previously unselected package libgmp-dev:amd64.
Preparing to unpack .../libgmp-dev_2%3a5.1.3+dfsg-1ubuntu1_amd64.deb ...
Unpacking libgmp-dev:amd64 (2:5.1.3+dfsg-1ubuntu1) ...
Setting up libgmpxx4ldbl:amd64 (2:5.1.3+dfsg-1ubuntu1) ...
Setting up libgmp-dev:amd64 (2:5.1.3+dfsg-1ubuntu1) ...
Processing triggers for libc-bin (2.19-0ubuntu6.1) ...
++ opam install tptp -e source,linux
+ srcext=
+ echo Ubuntu srcexts:
+ '[' '' '!=' '' ']'
+ opam install tptp
Ubuntu srcexts:
The following actions will be performed:
 - install   conf-gmp.1                            [required by zarith]
 - install   pprint.20140424                       [required by tptp]
 - install   menhir.20130912                       [required by tptp]
 - install   zarith.1.2                            [required by tptp]
 - install   tptp.0.3.1
=== 5 to install ===

=-=- Synchronizing package archives -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
[default] Synchronizing with /home/opam/opam-repository/archives/menhir.20130912+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/pprint.20140424+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/tptp.0.3.1+opam.tar.gz
sending incremental file list
sending incremental file list
tptp.0.3.1+opam.tar.gz
menhir.20130912+opam.tar.gz
sending incremental file list
pprint.20140424+opam.tar.gz

sent 23,315 bytes  received 35 bytes  46,700.00 bytes/sec
total size is 23,179  speedup is 0.99

sent 74,061 bytes  received 35 bytes  148,192.00 bytes/sec
total size is 73,918  speedup is 1.00

sent 547,371 bytes  received 35 bytes  1,094,812.00 bytes/sec
total size is 547,111  speedup is 1.00
[default] Synchronizing with /home/opam/opam-repository/archives/zarith.1.2+opam.tar.gz
sending incremental file list
zarith.1.2+opam.tar.gz

sent 71,532 bytes  received 35 bytes  143,134.00 bytes/sec
total size is 71,389  speedup is 1.00

=-=- Installing packages =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Copying ~/.opam/repo/default/packages/conf-gmp/conf-gmp.1/files/test.c to ~/.opam/4.01.0/build/conf-gmp.1/
Building conf-gmp.1:
  cc -c test.c
Installing conf-gmp.1.
Building menhir.20130912:
  make install PREFIX=/home/opam/.opam/4.01.0 docdir=/home/opam/.opam/4.01.0/doc/menhir libdir=/home/opam/.opam/4.01.0/lib/menhir mandir=/home/opam/.opam/4.01.0/man/man1
rm -f src/installation.ml
echo "let libdir = \"/home/opam/.opam/4.01.0/lib/menhir\"" > src/installation.ml
if ocamlfind ocamlc -v >/dev/null 2>&1 ; then \
	  echo "let ocamlfind = true" >> src/installation.ml ; \
	else \
	  echo "let ocamlfind = false" >> src/installation.ml ; \
	fi
make -C src library bootstrap
make[1]: Entering directory `/home/opam/.opam/4.01.0/build/menhir.20130912/src'
ocamlbuild -classic-display -use-ocamlfind -j 0 menhirLib.cmo menhirLib.cmx
ocamlfind ocamlopt unix.cmxa -I /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild/ocamlbuildlib.cmxa -linkpkg myocamlbuild.ml /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild/ocamlbuild.cmx -o myocamlbuild
ocamlfind ocamldep -modules infiniteArray.mli > infiniteArray.mli.depends
ocamlfind ocamlc -c -o infiniteArray.cmi infiniteArray.mli
ocamlfind ocamldep -modules infiniteArray.ml > infiniteArray.ml.depends
ocamlfind ocamldep -modules packedIntArray.mli > packedIntArray.mli.depends
ocamlfind ocamlc -c -o packedIntArray.cmi packedIntArray.mli
ocamlfind ocamldep -modules packedIntArray.ml > packedIntArray.ml.depends
ocamlfind ocamldep -modules rowDisplacement.mli > rowDisplacement.mli.depends
ocamlfind ocamlc -c -o rowDisplacement.cmi rowDisplacement.mli
ocamlfind ocamldep -modules rowDisplacement.ml > rowDisplacement.ml.depends
ocamlfind ocamldep -modules engineTypes.ml > engineTypes.ml.depends
ocamlfind ocamldep -modules engine.mli > engine.mli.depends
ocamlfind ocamlc -c -g -o engineTypes.cmo engineTypes.ml
ocamlfind ocamlc -c -o engine.cmi engine.mli
ocamlfind ocamldep -modules engine.ml > engine.ml.depends
ocamlfind ocamldep -modules tableFormat.ml > tableFormat.ml.depends
ocamlfind ocamldep -modules tableInterpreter.mli > tableInterpreter.mli.depends
ocamlfind ocamlc -c -g -o tableFormat.cmo tableFormat.ml
ocamlfind ocamlc -c -o tableInterpreter.cmi tableInterpreter.mli
ocamlfind ocamldep -modules tableInterpreter.ml > tableInterpreter.ml.depends
ocamlfind ocamldep -modules convert.mli > convert.mli.depends
ocamlfind ocamlc -c -o convert.cmi convert.mli
ocamlfind ocamldep -modules convert.ml > convert.ml.depends
ocamlfind ocamlc -c -g -o infiniteArray.cmo infiniteArray.ml
ocamlfind ocamlc -c -g -o packedIntArray.cmo packedIntArray.ml
ocamlfind ocamlc -c -g -o rowDisplacement.cmo rowDisplacement.ml
ocamlfind ocamlc -c -g -o engine.cmo engine.ml
ocamlfind ocamlc -c -g -o tableInterpreter.cmo tableInterpreter.ml
ocamlfind ocamlc -c -g -o convert.cmo convert.ml
ocamlfind ocamlc -pack -g infiniteArray.cmo packedIntArray.cmo rowDisplacement.cmo engineTypes.cmo engine.cmo tableFormat.cmo tableInterpreter.cmo convert.cmo -o menhirLib.cmo
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o infiniteArray.cmx infiniteArray.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o engineTypes.cmx engineTypes.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o packedIntArray.cmx packedIntArray.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o engine.cmx engine.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o rowDisplacement.cmx rowDisplacement.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o tableFormat.cmx tableFormat.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o tableInterpreter.cmx tableInterpreter.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o convert.cmx convert.ml
touch menhirLib.mli  ; if  ocamlfind ocamlopt -pack -g infiniteArray.cmx packedIntArray.cmx rowDisplacement.cmx engineTypes.cmx engine.cmx tableFormat.cmx tableInterpreter.cmx convert.cmx -o menhirLib.cmx  ; then  rm -f menhirLib.mli  ; else  rm -f menhirLib.mli  ; exit 1; fi
# Parallel statistics: { count(total): 2(33), max: 6, min: 2, average(total): 4.000(1.182) }
Checking that Objective Caml is recent enough...
ocamlfind ocamlopt unix.cmxa -I /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild/ocamlbuildlib.cmxa -linkpkg myocamlbuild.ml /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild/ocamlbuild.cmx -o myocamlbuild
ocamlfind ocamldep -modules checkOCamlVersion.ml > checkOCamlVersion.ml.depends
ocamlfind ocamlc -c -g -o checkOCamlVersion.cmo checkOCamlVersion.ml
ocamlfind ocamlc -linkpkg str.cma -g checkOCamlVersion.cmo -o checkOCamlVersion.byte
# No parallelism done
Version 4.01.0 is OK.
ocamlfind ocamldep -modules menhir.ml > menhir.ml.depends
ocamlfind ocamldep -modules back.mli > back.mli.depends
ocamlfind ocamlc -c -o back.cmi back.mli
ocamlfind ocamlc -c -g -o menhir.cmo menhir.ml
ocamlfind ocamldep -modules back.ml > back.ml.depends
ocamlfind ocamldep -modules codeBackend.ml > codeBackend.ml.depends

++ opam install pa_comprehension -e ubuntu
+ depext=
Ubuntu depexts:
+ echo Ubuntu depexts:
+ '[' '' '!=' '' ']'
++ opam install pa_comprehension -e source,linux
+ srcext=
+ echo Ubuntu srcexts:
+ '[' '' '!=' '' ']'
+ opam install pa_comprehension
Ubuntu srcexts:
The following actions will be performed:
 - install batteries.2.2.0 [required by pa_comprehension]
 - install pa_comprehension.0.4
2 to install | 0 to reinstall | 0 to upgrade | 0 to downgrade | 0 to remove

=-=-= Installing batteries.2.2.0 =-=-=
default    Synchronizing with /home/opam/opam-repository/archives/batteries.2.2.0+opam.tar.gz
sending incremental file list
batteries.2.2.0+opam.tar.gz

sent 727,684 bytes  received 35 bytes  1,455,438.00 bytes/sec
total size is 727,376  speedup is 1.00
Building batteries.2.2.0:
  ocaml setup.ml -configure --prefix /home/opam/.opam/system
  make all
  make install

Configuration: 
ocamlfind: ..................................... /home/opam/.opam/system/bin/ocamlfind
ocamlc: ........................................ /usr/bin/ocamlc.opt
ocamlopt: ...................................... /usr/bin/ocamlopt.opt
ocamlbuild: .................................... /usr/bin/ocamlbuild
Package name: .................................. batteries
Package version: ............................... 2.1
os_type: ....................................... Unix
system: ........................................ linux
architecture: .................................. amd64
ccomp_type: .................................... cc
ocaml_version: ................................. 4.01.0
standard_library_default: ...................... /usr/lib/ocaml
standard_library: .............................. /usr/lib/ocaml
standard_runtime: .............................. /usr/bin/ocamlrun
bytecomp_c_compiler: ........................... gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT -fPIC
native_c_compiler: ............................. gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT
model: ......................................... default
ext_obj: ....................................... .o
ext_asm: ....................................... .s
ext_lib: ....................................... .a
ext_dll: ....................................... .so
default_executable_name: ....................... a.out
systhread_supported: ........................... true
Install architecture-independent files dir: .... /home/opam/.opam/system
Install architecture-dependent files in dir: ... $prefix
User executables: .............................. $exec_prefix/bin
System admin executables: ...................... $exec_prefix/sbin
Program executables: ........................... $exec_prefix/libexec
Read-only single-machine data: ................. $prefix/etc
Modifiable architecture-independent data: ...... $prefix/com
Modifiable single-machine data: ................ $prefix/var
Object code libraries: ......................... $exec_prefix/lib
Read-only arch-independent data root: .......... $prefix/share
Read-only architecture-independent data: ....... $datarootdir
Info documentation: ............................ $datarootdir/info
Locale-dependent data: ......................... $datarootdir/locale
Man documentation: ............................. $datarootdir/man
Documentation root: ............................ $datarootdir/doc/$pkg_name
HTML documentation: ............................ $docdir
DVI documentation: ............................. $docdir
PDF documentation: ............................. $docdir
PS documentation: .............................. $docdir
findlib_version: ............................... 1.4.1
is_native: ..................................... true
suffix_program: ................................ 
Remove a file.: ................................ rm -f
Remove a directory.: ........................... rm -rf
Turn ocaml debug flag on: ...................... true
Turn ocaml profile flag on: .................... false
Compiler support generation of .cmxs.: ......... true
make: .......................................... /usr/bin/make

ocaml str.cma build/prefilter.ml < src/batMarshal.mliv > src/batMarshal.mli
ocaml str.cma build/prefilter.ml < src/batUnix.mliv > src/batUnix.mli
ocaml str.cma build/prefilter.ml < src/batPervasives.mliv > src/batPervasives.mli
ocaml str.cma build/prefilter.ml < src/batInnerPervasives.mlv > src/batInnerPervasives.ml
ocaml str.cma build/prefilter.ml < src/batHashtbl.mlv > src/batHashtbl.ml
ocaml str.cma build/prefilter.ml < src/batPrintexc.mliv > src/batPrintexc.mli
ocaml str.cma build/prefilter.ml < src/batSys.mliv > src/batSys.mli
ocaml str.cma build/prefilter.ml < src/batBigarray.mliv > src/batBigarray.mli
Build mode: shared
ocamlbuild -no-links src/batteries.cma src/batteriesHelp.cmo src/batteriesThread.cma META src/batteries.cmxs src/batteriesThread.cmxs
/usr/bin/ocamlopt.opt unix.cmxa -I /usr/lib/ocaml/ocamlbuild /usr/lib/ocaml/ocamlbuild/ocamlbuildlib.cmxa myocamlbuild.ml /usr/lib/ocaml/ocamlbuild/ocamlbuild.cmx -o myocamlbuild
ocamlfind: Package `bisect' not found
Warning: tag "package" does not expect a parameter, but is used with parameter "oUnit"
Warning: tag "package" does not expect a parameter, but is used with parameter "QTest2Lib"
ocamlfind ocamldep -package bigarray,num,str -modules src/batInnerPervasives.ml > src/batInnerPervasives.ml.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batConcurrent.mli > src/batConcurrent.mli.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batOption.mli > src/batOption.mli.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batEnum.mli > src/batEnum.mli.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batInnerIO.mli > src/batInnerIO.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batConcurrent.cmi src/batConcurrent.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batInterfaces.mli > src/batInterfaces.mli.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batOrd.mli > src/batOrd.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batInnerIO.cmi src/batInnerIO.mli
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batInterfaces.cmi src/batInterfaces.mli
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batOrd.cmi src/batOrd.mli
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batEnum.cmi src/batEnum.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batRef.mli > src/batRef.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batOption.cmi src/batOption.mli
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batRef.cmi src/batRef.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batArray.mli > src/batArray.mli.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batIO.mli > src/batIO.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batIO.cmi src/batIO.mli
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batArray.cmi src/batArray.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batArray.ml > src/batArray.ml.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batBitSet.mli > src/batBitSet.mli.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batInt.mli > src/batInt.mli.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batNumber.mli > src/batNumber.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batNumber.cmi src/batNumber.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batList.mli > src/batList.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batBitSet.cmi src/batBitSet.mli
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batInt.cmi src/batInt.mli
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batList.cmi src/batList.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batBigarray.mli > src/batBigarray.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batBigarray.cmi src/batBigarray.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batBigarray.ml > src/batBigarray.ml.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batBig_int.mli > src/batBig_int.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batBig_int.cmi src/batBig_int.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batBig_int.ml > src/batBig_int.ml.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batBool.mli > src/batBool.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batBool.cmi src/batBool.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batBool.ml > src/batBool.ml.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batBounded.mli > src/batBounded.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batBounded.cmi src/batBounded.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batBounded.ml > src/batBounded.ml.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batBuffer.mli > src/batBuffer.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batBuffer.cmi src/batBuffer.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batBuffer.ml > src/batBuffer.ml.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batString.mli > src/batString.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batString.cmi src/batString.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batChar.mli > src/batChar.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batChar.cmi src/batChar.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batChar.ml > src/batChar.ml.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batComplex.mli > src/batComplex.mli.depends
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batComplex.cmi src/batComplex.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batComplex.ml > src/batComplex.ml.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batGenlex.mli > src/batGenlex.mli.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batCharParser.mli > src/batCharParser.mli.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batParserCo.mli > src/batParserCo.mli.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batPervasives.mli > src/batPervasives.mli.depends
ocamlfind ocamldep -package bigarray,num,str -modules src/batFile.mli > src/batFile.mli.depends
ocamlfind ocamlc -c -g -annot -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batInnerPervasives.cmo src/batInnerPervasives.ml
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batFile.cmi src/batFile.mli
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batPervasives.cmi src/batPervasives.mli
ocamlfind ocamlc -c -g -package bigarray,num,str -I src -I benchsuite -I qtest -I testsuite -I build -o src/batParserCo.cmi src/batParserCo.mli
ocamlfind ocamldep -package bigarray,num,str -modules src/batLazyList.mli > src/batLazyList.mli.depends

++ opam install joolog -e ubuntu
+ depext=
+ echo Ubuntu depexts:
Ubuntu depexts:
+ '[' '' '!=' '' ']'
++ opam install joolog -e source,linux
Ubuntu srcexts:
+ srcext=
+ echo Ubuntu srcexts:
+ '[' '' '!=' '' ']'
+ opam install joolog
The following actions will be performed:
 - install   camlp4.4.01.0                         [required by joolog]
 - install   menhir.20130912                       [required by js_of_ocaml]
 - install   ocamlify.0.0.1                        [required by oasis]
 - install   ocamlmod.0.0.7                        [required by oasis]
 - install   react.0.9.3                           [required by joolog]
 - install   type_conv.111.13.00                   [required by ocaml-data-notation]
 - install   lwt.2.4.4                             [required by joolog]
 - install   ocaml-data-notation.0.0.11            [required by oasis]
 - install   js_of_ocaml.2.4                       [required by joolog]
 - install   oasis.0.4.4                           [required by joolog]
 - install   joolog.0.4
=== 11 to install ===

=-=- Synchronizing package archives -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
[default] Synchronizing with /home/opam/opam-repository/archives/joolog.0.4+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/js_of_ocaml.2.4+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/lwt.2.4.4+opam.tar.gz
sending incremental file list
sending incremental file list
sending incremental file list
joolog.0.4+opam.tar.gz
lwt.2.4.4+opam.tar.gz
js_of_ocaml.2.4+opam.tar.gz

sent 5,419 bytes  received 35 bytes  10,908.00 bytes/sec
total size is 5,288  speedup is 0.97

sent 297,238 bytes  received 35 bytes  594,546.00 bytes/sec
total size is 297,040  speedup is 1.00

sent 1,264,237 bytes  received 35 bytes  2,528,544.00 bytes/sec
total size is 1,263,801  speedup is 1.00
[default] Synchronizing with /home/opam/opam-repository/archives/menhir.20130912+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/oasis.0.4.4+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/ocaml-data-notation.0.0.11+opam.tar.gz
sending incremental file list
sending incremental file list
menhir.20130912+opam.tar.gz
oasis.0.4.4+opam.tar.gz
sending incremental file list
ocaml-data-notation.0.0.11+opam.tar.gz

sent 547,371 bytes  received 35 bytes  1,094,812.00 bytes/sec
total size is 547,111  speedup is 1.00

sent 339,201 bytes  received 35 bytes  678,472.00 bytes/sec
total size is 338,993  speedup is 1.00

sent 63,807 bytes  received 35 bytes  127,684.00 bytes/sec
total size is 63,656  speedup is 1.00
[default] Synchronizing with /home/opam/opam-repository/archives/ocamlify.0.0.1+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/ocamlmod.0.0.7+opam.tar.gz
[default] Synchronizing with /home/opam/opam-repository/archives/react.0.9.3+opam.tar.gz
sending incremental file list
ocamlify.0.0.1+opam.tar.gz
sending incremental file list
sending incremental file list
ocamlmod.0.0.7+opam.tar.gz
react.0.9.3+opam.tar.gz

sent 46,441 bytes  received 35 bytes  92,952.00 bytes/sec
total size is 46,302  speedup is 1.00

sent 107,599 bytes  received 35 bytes  215,268.00 bytes/sec
total size is 107,447  speedup is 1.00

sent 46,867 bytes  received 35 bytes  93,804.00 bytes/sec
total size is 46,728  speedup is 1.00
[default] Synchronizing with /home/opam/opam-repository/archives/type_conv.111.13.00+opam.tar.gz
sending incremental file list
type_conv.111.13.00+opam.tar.gz

sent 61,887 bytes  received 35 bytes  123,844.00 bytes/sec
total size is 61,743  speedup is 1.00

=-=- Installing packages =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Installing camlp4.4.01.0.
Building menhir.20130912:
  make install PREFIX=/home/opam/.opam/4.01.0 docdir=/home/opam/.opam/4.01.0/doc/menhir libdir=/home/opam/.opam/4.01.0/lib/menhir mandir=/home/opam/.opam/4.01.0/man/man1
rm -f src/installation.ml
echo "let libdir = \"/home/opam/.opam/4.01.0/lib/menhir\"" > src/installation.ml
if ocamlfind ocamlc -v >/dev/null 2>&1 ; then \
	  echo "let ocamlfind = true" >> src/installation.ml ; \
	else \
	  echo "let ocamlfind = false" >> src/installation.ml ; \
	fi
make -C src library bootstrap
make[1]: Entering directory `/home/opam/.opam/4.01.0/build/menhir.20130912/src'
ocamlbuild -classic-display -use-ocamlfind -j 0 menhirLib.cmo menhirLib.cmx
ocamlfind ocamlopt unix.cmxa -I /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild/ocamlbuildlib.cmxa -linkpkg myocamlbuild.ml /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild/ocamlbuild.cmx -o myocamlbuild
ocamlfind ocamldep -modules infiniteArray.mli > infiniteArray.mli.depends
ocamlfind ocamlc -c -o infiniteArray.cmi infiniteArray.mli
ocamlfind ocamldep -modules infiniteArray.ml > infiniteArray.ml.depends
ocamlfind ocamldep -modules packedIntArray.mli > packedIntArray.mli.depends
ocamlfind ocamlc -c -o packedIntArray.cmi packedIntArray.mli
ocamlfind ocamldep -modules packedIntArray.ml > packedIntArray.ml.depends
ocamlfind ocamldep -modules rowDisplacement.mli > rowDisplacement.mli.depends
ocamlfind ocamlc -c -o rowDisplacement.cmi rowDisplacement.mli
ocamlfind ocamldep -modules rowDisplacement.ml > rowDisplacement.ml.depends
ocamlfind ocamldep -modules engineTypes.ml > engineTypes.ml.depends
ocamlfind ocamldep -modules engine.mli > engine.mli.depends
ocamlfind ocamlc -c -g -o engineTypes.cmo engineTypes.ml
ocamlfind ocamlc -c -o engine.cmi engine.mli
ocamlfind ocamldep -modules engine.ml > engine.ml.depends
ocamlfind ocamldep -modules tableFormat.ml > tableFormat.ml.depends
ocamlfind ocamldep -modules tableInterpreter.mli > tableInterpreter.mli.depends
ocamlfind ocamlc -c -g -o tableFormat.cmo tableFormat.ml
ocamlfind ocamlc -c -o tableInterpreter.cmi tableInterpreter.mli
ocamlfind ocamldep -modules tableInterpreter.ml > tableInterpreter.ml.depends
ocamlfind ocamldep -modules convert.mli > convert.mli.depends
ocamlfind ocamlc -c -o convert.cmi convert.mli
ocamlfind ocamldep -modules convert.ml > convert.ml.depends
ocamlfind ocamlc -c -g -o infiniteArray.cmo infiniteArray.ml
ocamlfind ocamlc -c -g -o packedIntArray.cmo packedIntArray.ml
ocamlfind ocamlc -c -g -o rowDisplacement.cmo rowDisplacement.ml
ocamlfind ocamlc -c -g -o engine.cmo engine.ml
ocamlfind ocamlc -c -g -o tableInterpreter.cmo tableInterpreter.ml
ocamlfind ocamlc -c -g -o convert.cmo convert.ml
ocamlfind ocamlc -pack -g infiniteArray.cmo packedIntArray.cmo rowDisplacement.cmo engineTypes.cmo engine.cmo tableFormat.cmo tableInterpreter.cmo convert.cmo -o menhirLib.cmo
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o infiniteArray.cmx infiniteArray.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o engineTypes.cmx engineTypes.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o packedIntArray.cmx packedIntArray.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o engine.cmx engine.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o rowDisplacement.cmx rowDisplacement.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o tableFormat.cmx tableFormat.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o tableInterpreter.cmx tableInterpreter.ml
ocamlfind ocamlopt -c -g -inline 1000 -for-pack MenhirLib -o convert.cmx convert.ml
touch menhirLib.mli  ; if  ocamlfind ocamlopt -pack -g infiniteArray.cmx packedIntArray.cmx rowDisplacement.cmx engineTypes.cmx engine.cmx tableFormat.cmx tableInterpreter.cmx convert.cmx -o menhirLib.cmx  ; then  rm -f menhirLib.mli  ; else  rm -f menhirLib.mli  ; exit 1; fi
# Parallel statistics: { count(total): 2(33), max: 6, min: 2, average(total): 4.000(1.182) }
Checking that Objective Caml is recent enough...
ocamlfind ocamlopt unix.cmxa -I /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild/ocamlbuildlib.cmxa -linkpkg myocamlbuild.ml /home/opam/.opam/4.01.0/lib/ocaml/ocamlbuild/ocamlbuild.cmx -o myocamlbuild

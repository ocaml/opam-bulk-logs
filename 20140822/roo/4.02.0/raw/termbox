++ opam install termbox -e ubuntu
+ depext=python
+ echo Ubuntu depexts: python
+ '[' python '!=' '' ']'
+ sudo apt-get install -qq -y build-essential m4
Ubuntu depexts: python
+ sudo apt-get install -qq -y python
++ opam install termbox -e source,linux
+ srcext=
+ echo Ubuntu srcexts:
+ '[' '' '!=' '' ']'
+ opam install termbox
Ubuntu srcexts:
The following actions will be performed:
 - install   termbox.0.1.0
=== 1 to install ===

=-=- Synchronizing package archives -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
[default] Synchronizing with /home/opam/opam-repository/archives/termbox.0.1.0+opam.tar.gz
sending incremental file list
termbox.0.1.0+opam.tar.gz

sent 119,289 bytes  received 35 bytes  238,648.00 bytes/sec
total size is 119,135  speedup is 1.00

=-=- Installing packages =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Building termbox.0.1.0:
  make
  make install
cd termbox && ./waf configure && ./waf
Setting top to                           : /home/opam/.opam/4.02.0+trunk/build/termbox.0.1.0/termbox 
Setting out to                           : /home/opam/.opam/4.02.0+trunk/build/termbox.0.1.0/termbox/build 
Checking for 'gcc' (c compiler)          : /usr/bin/gcc 
'configure' finished successfully (0.259s)
Waf: Entering directory `/home/opam/.opam/4.02.0+trunk/build/termbox.0.1.0/termbox/build'
[ 1/11] c: src/termbox.c -> build/src/termbox.c.1.o
[ 2/11] c: src/utf8.c -> build/src/utf8.c.1.o
[ 3/11] c: src/termbox.c -> build/src/termbox.c.2.o
[ 4/11] c: src/utf8.c -> build/src/utf8.c.2.o
[ 5/11] c: src/demo/keyboard.c -> build/src/demo/keyboard.c.1.o
[ 6/11] c: src/demo/output.c -> build/src/demo/output.c.2.o
../src/termbox.c: In function 'sigwinch_handler':
../src/termbox.c:526:7: warning: ignoring return value of 'write', declared with attribute warn_unused_result [-Wunused-result]
  write(winch_fds[1], &zzz, sizeof(int));
       ^
In file included from ../src/termbox.c:16:0:
../src/bytebuffer.inl: In function 'bytebuffer_flush':
../src/bytebuffer.inl:66:7: warning: ignoring return value of 'write', declared with attribute warn_unused_result [-Wunused-result]
  write(fd, b->buf, b->len);
       ^
../src/termbox.c: In function 'wait_fill_event':
../src/termbox.c:599:8: warning: ignoring return value of 'read', declared with attribute warn_unused_result [-Wunused-result]
    read(winch_fds[0], &zzz, sizeof(int));
        ^
[ 7/11] cshlib: build/src/termbox.c.1.o build/src/utf8.c.1.o -> build/src/libtermbox.so
../src/termbox.c: In function 'sigwinch_handler':
../src/termbox.c:526:7: warning: ignoring return value of 'write', declared with attribute warn_unused_result [-Wunused-result]
  write(winch_fds[1], &zzz, sizeof(int));
       ^
In file included from ../src/termbox.c:16:0:
../src/bytebuffer.inl: In function 'bytebuffer_flush':
../src/bytebuffer.inl:66:7: warning: ignoring return value of 'write', declared with attribute warn_unused_result [-Wunused-result]
  write(fd, b->buf, b->len);
       ^
../src/termbox.c: In function 'wait_fill_event':
../src/termbox.c:599:8: warning: ignoring return value of 'read', declared with attribute warn_unused_result [-Wunused-result]
    read(winch_fds[0], &zzz, sizeof(int));
        ^
[ 8/11] cstlib: build/src/termbox.c.2.o build/src/utf8.c.2.o -> build/src/libtermbox.a
[ 9/11] cprogram: build/src/demo/keyboard.c.1.o -> build/src/demo/keyboard
[10/11] cprogram: build/src/demo/output.c.2.o -> build/src/demo/output
[11/11] vnum: build/src/libtermbox.so -> build/src/libtermbox.so.1 build/src/libtermbox.so.1.0.0
Waf: Leaving directory `/home/opam/.opam/4.02.0+trunk/build/termbox.0.1.0/termbox/build'
'build' finished successfully (0.936s)
# Comple just the stubs into an object file.
ocamlfind ocamlc -c termbox_stubs.c -ccopt -fPIC -ccopt -Itermbox/src -o termbox_stubs.o
# Make the dynamic and static libraries containing the stubs AND termbox objects.
ocamlfind ocamlmklib termbox_stubs.o termbox/build/src/*.2.o -o otermbox
# Make the cmi and cmo files.
ocamlfind ocamlc -c termbox.mli termbox.ml
# Make the bytecode library.
#	"-dllib -lotermbox" Arrange that the stubs are loaded by the runtime system at program startup.
#	"-cclib -lotermbox" Pass -lotermbox when linking in -custom runtime mode. ie. when including a runtime with the bytecode.
ocamlfind ocamlc -a -dllib -lotermbox -cclib -lotermbox termbox.cmo -o termbox.cma
# Make the cmx file.
ocamlopt -c termbox.ml
# Make the native version of the library.
ocamlopt -a -cclib -lotermbox termbox.cmx -o termbox.cmxa
# Make a version of the library that supports being loaded by Dynlink.
ocamlopt -shared termbox.cmx -o termbox.cmxs
ocamlfind install termbox META *.cmi *.cma *.cmxa *.cmxs *.a *.so
Installed /home/opam/.opam/4.02.0+trunk/lib/termbox/termbox.a
Installed /home/opam/.opam/4.02.0+trunk/lib/termbox/libotermbox.a
Installed /home/opam/.opam/4.02.0+trunk/lib/termbox/termbox.cmxs
Installed /home/opam/.opam/4.02.0+trunk/lib/termbox/termbox.cmxa
Installed /home/opam/.opam/4.02.0+trunk/lib/termbox/termbox.cma
Installed /home/opam/.opam/4.02.0+trunk/lib/termbox/termbox.cmi
Installed /home/opam/.opam/4.02.0+trunk/lib/termbox/META
Installed /home/opam/.opam/4.02.0+trunk/lib/stublibs/dllotermbox.so
Installed /home/opam/.opam/4.02.0+trunk/lib/stublibs/dllotermbox.so.owner
ocamlfind: [WARNING] You have installed DLLs but the directory /home/opam/.opam/4.02.0+trunk/lib/stublibs is not mentioned in ld.conf
Installing termbox.0.1.0.

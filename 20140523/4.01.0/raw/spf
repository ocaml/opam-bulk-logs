++ opam install spf -e ubuntu
+ depext=libspf2-dev
+ echo Ubuntu depexts: libspf2-dev
+ '[' libspf2-dev '!=' '' ']'
+ sudo apt-get install -qq -y build-essential m4
Ubuntu depexts: libspf2-dev
+ sudo apt-get install -qq -y libspf2-dev
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
Selecting previously unselected package libspf2-2.
(Reading database ... 22269 files and directories currently installed.)
Preparing to unpack .../libspf2-2_1.2.10-3_amd64.deb ...
Unpacking libspf2-2 (1.2.10-3) ...
Selecting previously unselected package libspf2-dev.
Preparing to unpack .../libspf2-dev_1.2.10-3_amd64.deb ...
Unpacking libspf2-dev (1.2.10-3) ...
Setting up libspf2-2 (1.2.10-3) ...
Setting up libspf2-dev (1.2.10-3) ...
Processing triggers for libc-bin (2.19-0ubuntu6) ...
++ opam install spf -e source,linux
+ srcext=
+ echo Ubuntu srcexts:
Ubuntu srcexts:
+ '[' '' '!=' '' ']'
+ opam install spf
The following actions will be performed:
 - install spf.1.0.1
1 to install | 0 to reinstall | 0 to upgrade | 0 to downgrade | 0 to remove

=-=-= Installing spf.1.0.1 =-=-=
default    Synchronizing with /home/opam/opam-repository/archives/spf.1.0.1+opam.tar.gz
sending incremental file list
spf.1.0.1+opam.tar.gz

sent 42,828 bytes  received 35 bytes  85,726.00 bytes/sec
total size is 42,694  speedup is 1.00
Building spf.1.0.1:
  ocaml setup.ml -configure --prefix /home/opam/.opam/system
  ocaml setup.ml -build
  ocaml setup.ml -install

Configuration: 
ocamlfind: ........................................... /home/opam/.opam/system/bin/ocamlfind
ocamlc: .............................................. /usr/bin/ocamlc.opt
ocamlopt: ............................................ /usr/bin/ocamlopt.opt
ocamlbuild: .......................................... /usr/bin/ocamlbuild
Package name: ........................................ spf
Package version: ..................................... 1.0.0
os_type: ............................................. Unix
system: .............................................. linux
architecture: ........................................ amd64
ccomp_type: .......................................... cc
ocaml_version: ....................................... 4.01.0
standard_library_default: ............................ /usr/lib/ocaml
standard_library: .................................... /usr/lib/ocaml
standard_runtime: .................................... /usr/bin/ocamlrun
bytecomp_c_compiler: ................................. gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT -fPIC
native_c_compiler: ................................... gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT
model: ............................................... default
ext_obj: ............................................. .o
ext_asm: ............................................. .s
ext_lib: ............................................. .a
ext_dll: ............................................. .so
default_executable_name: ............................. a.out
systhread_supported: ................................. true
Install architecture-independent files dir: .......... /home/opam/.opam/system
Install architecture-dependent files in dir: ......... $prefix
User executables: .................................... $exec_prefix/bin
System admin executables: ............................ $exec_prefix/sbin
Program executables: ................................. $exec_prefix/libexec
Read-only single-machine data: ....................... $prefix/etc
Modifiable architecture-independent data: ............ $prefix/com
Modifiable single-machine data: ...................... $prefix/var
Object code libraries: ............................... $exec_prefix/lib
Read-only arch-independent data root: ................ $prefix/share
Read-only architecture-independent data: ............. $datarootdir
Info documentation: .................................. $datarootdir/info
Locale-dependent data: ............................... $datarootdir/locale
Man documentation: ................................... $datarootdir/man
Documentation root: .................................. $datarootdir/doc/$pkg_name
HTML documentation: .................................. $docdir
DVI documentation: ................................... $docdir
PDF documentation: ................................... $docdir
PS documentation: .................................... $docdir
findlib_version: ..................................... 1.4
is_native: ........................................... true
suffix_program: ...................................... 
Remove a file.: ...................................... rm -f
Remove a directory.: ................................. rm -rf
Turn ocaml debug flag on: ............................ true
Turn ocaml profile flag on: .......................... false
Compiler support generation of .cmxs.: ............... true
OCamlbuild additional flags: ......................... 
Create documentations: ............................... true
Compile tests executable and library and run them: ... false
pkg_unix: ............................................ /usr/lib/ocaml
ocamldoc: ............................................ /usr/bin/ocamldoc

/usr/bin/ocamlopt.opt unix.cmxa -I /usr/lib/ocaml/ocamlbuild /usr/lib/ocaml/ocamlbuild/ocamlbuildlib.cmxa myocamlbuild.ml /usr/lib/ocaml/ocamlbuild/ocamlbuild.cmx -o myocamlbuild
ocamlfind ocamlc -ccopt -Wall -ccopt -Werror -c lib/spf_stubs.c
mv spf_stubs.o lib/spf_stubs.o
/usr/bin/ocamlmklib -o lib/spf_stubs -lspf2 lib/spf_stubs.o
ocamlfind ocamldep -modules lib/SPF.mli > lib/SPF.mli.depends
ocamlfind ocamlc -c -g -ccopt -Wall -ccopt -Werror -I lib -o lib/SPF.cmi lib/SPF.mli
ocamlfind ocamldep -modules lib/SPF.ml > lib/SPF.ml.depends
ocamlfind ocamlc -c -g -annot -warn-error A -ccopt -Wall -ccopt -Werror -I lib -o lib/SPF.cmo lib/SPF.ml
ocamlfind ocamlc -a -dllib -lspf_stubs -cclib -lspf_stubs -cclib -lspf2 lib/SPF.cmo -o lib/spf.cma
ocamlfind ocamlopt -c -g -annot -warn-error A -ccopt -Wall -ccopt -Werror -I lib -o lib/SPF.cmx lib/SPF.ml
ocamlfind ocamlopt -a -cclib -lspf_stubs -cclib -lspf2 lib/SPF.cmx -o lib/spf.cmxa
ocamlfind ocamlopt -shared -linkall -I lib lib/spf.cmxa -o lib/spf.cmxs
ocamlfind ocamldep -package unix -modules lib_test/test.ml > lib_test/test.ml.depends
ocamlfind ocamlc -c -g -annot -warn-error A -I lib -package unix -I lib_test -I lib -o lib_test/test.cmo lib_test/test.ml
ocamlfind ocamlopt -c -g -annot -warn-error A -I lib -package unix -I lib_test -I lib -o lib_test/test.cmx lib_test/test.ml
ocamlfind ocamlopt -g -I lib -linkpkg -package unix lib/spf.cmxa lib_test/test.cmx -o lib_test/test.native
Installed /home/opam/.opam/system/lib/spf/SPF.mli
Installed /home/opam/.opam/system/lib/spf/libspf_stubs.a
Installed /home/opam/.opam/system/lib/spf/spf.cma
Installed /home/opam/.opam/system/lib/spf/spf.cmxa
Installed /home/opam/.opam/system/lib/spf/spf.a
Installed /home/opam/.opam/system/lib/spf/spf.cmxs
Installed /home/opam/.opam/system/lib/spf/SPF.cmi
Installed /home/opam/.opam/system/lib/spf/SPF.cmx
Installed /home/opam/.opam/system/lib/spf/META
Installed /home/opam/.opam/system/lib/stublibs/dllspf_stubs.so
Installed /home/opam/.opam/system/lib/stublibs/dllspf_stubs.so.owner
ocamlfind: [WARNING] You have installed DLLs but the directory /home/opam/.opam/system/lib/stublibs is not mentioned in ld.conf
Installing spf.1.0.1.
